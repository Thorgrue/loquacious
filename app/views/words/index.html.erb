<div class="container m-auto">
<div class="bg-cover" style="background-image: url('https://cdn.shopify.com/s/files/1/0285/1316/products/w0280_1s_Chevrons-Pattern-Wallpaper-for-Walls-Rose-Chevrons_Repeating-Pattern-Sample-1.jpg?v=1604089034'); height: 75vh;">

<!-- Search bar -->


<!-- Static calendar -->

  <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.js" defer></script>
  <div x-data="app()" x-init="[initDate(), getNoOfDays()]" x-cloak class="relative z-0 flex h-full">

    <!-- Flèche gauche (à partir de mai 2021) -->
    <div class="flex flex-wrap content-center h-full">
      <div class="z-50 lg:-mx-10 mt-6 flex flex-wrap content-end lg:content-center h-full">
        <button
          type="button"
          class="text-xl lg:text-5xl text-center flex"
          :class="{'cursor-not-allowed opacity-25': year == 2021 && month <= 5 }"
          :disabled="year == 2021 && month <= 5 ? true : false"
          @click="if(month == 0) {month=11;  year--} else {month--}; getNoOfDays()">
          <span>◀︎</span>
        </button>
      </div>
    </div>

    <!-- Actual calendar fucked up width < 300 which is ok -->
    <div class="z-0 container mx-auto w-11/12 lg:w-2/3 xxs:w-12/12 ">


      <!-- Name of days -->
      <div class="grid flex flex-wrap justify-evenly py-2 font-title-play">
        <template x-for="(day, index) in DAYS" :key="index">
          <div style="width: 13.58%">
            <div
              x-text="day"
              class="text-black text-sm lg:text-xl uppercase tracking-wide font-bold text-center"></div>
          </div>
        </template>
      </div>

      <!-- Number of days -->
      <div class="flex flex-wrap text-2xl text-center font-body-philo">
        <template x-for="blankday in blankdays">
          <div
            style="width: 12.78%; height: 10.5vh"
            class="text-center mx-0.5 mt-0.5 my-1 lg:mx-1 lg:mt-1"></div>
        </template>
        <template x-for="(date, dateIndex) in no_of_days" :key="dateIndex">
          <div
            style="width: 12.78%; height: 10.5vh"
            class="m-0.5 my-0.5 lg:m-1 bg-white relative flex items-center justify-center">
            <div
              x-text="date"
              x-on:click="redirect(date, month)"
              class="inline-flex py-1 px-2 lg:px-8 items-center justify-center cursor-pointer text-center leading-none transition ease-in-out duration-100"
              :class="{'bg-black text-white': isToday(date) == true, 'text-black hover:bg-gray-200': isToday(date) == false }"
            ></div>
          </div>
        </template>
      </div>
    </div>


        <!-- Flèche droite (jusque juin 2022) -->
      <div class="z-50 lg:-mx-10 mt-3 flex flex-wrap content-end lg:content-center h-full">
        <button
          type="button"
          class="text-xl lg:text-5xl text-center flex"
          :class="{'cursor-not-allowed opacity-25': year == 2022 && month >= 5 }"
          :disabled="year == 2022 && month >= 5 ? true : false"
          @click="if (month == 11) {month=0; year++} else {month++}; getNoOfDays()">
          <span>▶︎</span>
        </button>
      </div>

      <div class="z-40 bottom-0 absolute -mb-4 flex w-full justify-center">
    <div class="text-4xl font-title-play text-center pt-1">
      <span x-text="MONTH_NAMES[month]" class=""></span>
      <span x-text="year" class=""></span>
    </div>
    </div>
  </div>

</div>



  <script>
    MONTH_NAMES = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Decembre'];
    const DAYS = ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'];

    function app() {
      return {
        month: '',
        year: '',
        no_of_days: [],
        blankdays: [],
        days: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],

        events: [
        ],
        event_title: '',
        event_date: '',
        event_theme: 'blue',

        themes: [
          {
            value: "blue",
            label: "Blue Theme"
          },
        ],

        openEventModal: false,

        initDate() {
          let today = new Date();
          this.month = today.getMonth();
          this.year = today.getFullYear();
          this.datepickerValue = new Date(this.year, this.month, today.getDate()).toDateString();
        },

        isToday(date) {
          const today = new Date();
          const d = new Date(this.year, this.month, date);

          return today.toDateString() === d.toDateString() ? true : false;
        },


        getNoOfDays() {
          let daysInMonth = new Date(this.year, this.month + 1, 0).getDate();

          // find where to start calendar day of week
          let dayOfWeek = new Date(this.year, this.month).getDay();
          let blankdaysArray = [];
          for ( var i=1; i <= dayOfWeek; i++) {
            blankdaysArray.push(i);
          }

          let daysArray = [];
          for ( var i=1; i <= daysInMonth; i++) {
            daysArray.push(i);
          }

          this.blankdays = blankdaysArray;
          this.no_of_days = daysArray;
        },

        redirect(date, month) {
          console.log(date, month);
          document.location.href=`/words/calendar?date=${date}&month=${month}`;
        }
      }
    }
  </script>

</div>
</div>
